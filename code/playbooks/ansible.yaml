###
### This playbook runs a few little scripts independently from
### the operation system, installed packages, available binaries,
### and other conditions. It's useful for the initial prepare of
### the operating system to further ansible stuff.
###
- hosts: all
  strategy: free
  gather_facts: false
  tasks:
    - name: Install necessary packages and binaries
      ansible.builtin.raw: |-
        set -ex

        _ANSIBLE_READY_FLAG="/.ansible_ready"
        _ERR_SUCCESS="### SUCCESS ###"
        _ERR_ALREADY_APPLIED="### ALREADY APPLIED CHANGES ###"
        _ERR_CANNOT_ESCALATE="### CANNOT ESCALATE ###"
        _ERR_UNSUPPORTED_SYSTEM="### UNSUPPORTED SYSTEM ###"

        if [ -f "${_ANSIBLE_READY_FLAG}" ]; then
          echo "${_ERR_ALREADY_APPLIED}"
          exit 0
        fi

        # Check permissions
        if ! sudo cat /proc/1/environ >/dev/null 2>/dev/null; then
          echo "${_ERR_CANNOT_ESCALATE}"
          exit 1
        fi

        # Grab OS details
        . /etc/os-release

        case "$(echo "${ID}" | tr 'A-Z' 'a-z')" in
          "ubuntu"|"debian")
            sudo apt-get -qqy update
            sudo apt-get -qqy install \
              python3 \
              python3-pip \
              python3-setuptools \
              python3-apt \
              python3-cryptography \
              python3-yaml \
              iproute2
            ;;
          "centos"|"redhat")
            sudo yum install -qqy \
              python3 \
              python3-pip \
              python3-setuptools \
              python3-cryptography \
              python3-yaml \
              iproute
            ;;
          "alpine")
            sudo apk add --no-cache \
              python3 \
              py3-pip \
              py3-setuptools \
              py3-cryptography \
              py3-yaml \
              iproute2
            ;;
          *)
            echo "${_ERR_UNSUPPORTED_SYSTEM}"
            exit 2
            ;;
        esac

        sudo touch "${_ANSIBLE_READY_FLAG}" && sudo chmod 777 "${_ANSIBLE_READY_FLAG}"
        echo "${_ERR_SUCCESS}"
        exit 0
      args:
        executable: /bin/sh
      register: ansible_raw
      changed_when: "'### ALREADY APPLIED CHANGES ###' not in ansible_raw.stdout_lines"
